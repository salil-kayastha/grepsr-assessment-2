services:
  # Database service
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # API service
  api-service:
    build: 
      context: ./api-service
      dockerfile: Dockerfile
    environment:
      PORT: 3000
      DB_HOST: db
      DB_NAME: appdb
      DB_USER: postgres
      DB_PASSWORD: password
      DB_PORT: 5432
    ports:
      - "3001:3000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  # Worker service
  worker-service:
    build: 
      context: ./worker-service
      dockerfile: Dockerfile
    environment:
      DB_HOST: db
      DB_NAME: appdb
      DB_USER: postgres
      DB_PASSWORD: password
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  # Frontend service
  frontend-service:
    build: 
      context: ./frontend-service
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api-service
    restart: unless-stopped

volumes:
  db_data: